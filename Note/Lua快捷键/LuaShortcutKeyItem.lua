---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2021/8/2 11:17
---
---
---快捷键输入类型
---@class LuaInputTypeEnum
LuaInputTypeEnum = {
    ---按键抬起
    Up=1,
    ---按键按下
    Down=2,
    ---按键一直按着
    On=3,
    ---按传统快捷键方式处理该按键配置
    None=4,
}
---@class LuaShortcutKeyItem:luaobject
---@field keyCodes table<number,UnityEngine.KeyCode>  自己去unity中找对应的按键枚举的id
---@field luaInputTypeEnum LuaInputTypeEnum 按键响应的类型
---@field keyCodesString table<number,string>
--[[---@field isMouse boolean 是否是鼠标输入]]
--[[---@field mouseKeyCode number 鼠标输入的按键类型 0左键，1右键，2中键]]
---@type LuaShortcutKeyItem
local LuaShortcutKeyItem = {}

---初始按键信息
---@param keyCodes table<number,string> or table<number,UnityEngine.KeyCode>  按键输入的keycode
---@param inputTypeEnum LuaInputTypeEnum 按键响应的类型
function LuaShortcutKeyItem:Init(keyCodes, inputTypeEnum)
    self.keyCodes = keyCodes
    self.inputTypeEnum = inputTypeEnum
end
--region 变量
function LuaShortcutKeyItem:GetKeyCode()
    if (self.keyCodes == nil) then
        self.keyCodes = {}
    end

    if (type(self.keyCodes) ~= 'table') then
        self.keyCodes = { self.keyCodes }
    end

    return self.keyCodes
end
---@return LuaInputTypeEnum
function LuaShortcutKeyItem:GetInputTypeEnum()
    if (self.inputTypeEnum == nil or type(self.inputTypeEnum) ~= 'number') then
        self.inputTypeEnum = LuaInputTypeEnum.None
    end
    return self.inputTypeEnum
end
--endregion
function LuaShortcutKeyItem:IsInputWithoutType()
    LuaShortcutKeyItem:IsInput(self:GetInputTypeEnum())
end
---@return boolean
function LuaShortcutKeyItem:IsInput(inputTypeEnum)
    local keyCodes = self:GetKeyCode()
    if (Utility.IsNullTable(keyCodes)) then
        return false
    end
        if (inputTypeEnum == LuaInputTypeEnum.Down) then
            for i = 1, #keyCodes do
              --  print("down")
              --  print(keyCodes[i])
                if (CS.UnityEngine.Input.GetKeyDown(keyCodes[i])) then
              --      print("true")
                    return true
                end
              --  print("false")
            end
        elseif (inputTypeEnum == LuaInputTypeEnum.On) then
            for i = 1, #keyCodes do
           --     print("on")
            --    print(keyCodes[i])
                if (CS.UnityEngine.Input.GetKey(keyCodes[i])) then
              --      print(keyCodes[i])
              --      print("true")
                    return true
                end
            --    print("false")
            end
        elseif (inputTypeEnum == LuaInputTypeEnum.Up) then
            for i = 1, #keyCodes do
            --    print("up")
            --    print(keyCodes[i])
                if (CS.UnityEngine.Input.GetKeyDownUp(keyCodes[i])) then
             --       print("true")
                    return true
                end
              --  print("false")
            end
        end

    return false;
end

---@param item LuaShortcutKeyItem
---@return boolean
function LuaShortcutKeyItem:IsSameKeyByItem(item)
    if(Utility.IsNullTable(item)) then
        return false
    end
    return self:IsSameKeyByKeyCode(item:GetKeyCode())
end
---@param keyCodes table<number,UnityEngine.KeyCode> or table<number,string>
------@return boolean
function LuaShortcutKeyItem:IsSameKeyByKeyCode(keyCodes)
    if(Utility.IsNullTable(keyCodes)) then
        return
    end

    for i = 1, #keyCodes do
        if(self.keyCodes[i] == nil) then
            return false
        end
        if(keyCodes[i] ~= self.keyCodes[i]) then
            return false
        end
    end
    return true
end

return LuaShortcutKeyItem


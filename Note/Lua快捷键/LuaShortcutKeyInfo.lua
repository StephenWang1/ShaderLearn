---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2021/8/2 14:40
---
---@class LuaShortcutKeyInfo:luaobject
---@field defaultKeyCodes table<number,LuaShortcutKeyItem> 默认的组合快捷键
---@field currKeyCodes table<number,LuaShortcutKeyItem> 当前的组合快捷键
---@field lastTimeKeyCodes table<number,LuaShortcutKeyItem> 上次保存的组合快捷键
---@field id string 快捷键id（目前就是 LuaCEvent）
---@field name string 快捷按键名字
---@field useDefaultShortCutTyp boolean 是否使用传统的快捷键方式（前面几个键一直按着最后一个按钮按下响应事件）
---@type LuaShortcutKeyInfo
local LuaShortcutInfo = {}

function LuaShortcutInfo:GetUseDefaultShortCutTyp()
    if (self.useDefaultShortCutTyp == nil) then
        return true
    end
    return self.useDefaultShortCutTyp
end

---是否快捷键输入
---@return boolean
function LuaShortcutInfo:IsInput()
    if (self:GetUseDefaultShortCutTyp()) then
        return self:TraditionalShortcutInput()
    else
        return self:FreedomShortcutInput()
    end
end

---传统快捷键方式（前面几个键一直按着最后一个按钮按下响应事件）
------@return boolean
function LuaShortcutInfo:TraditionalShortcutInput()
    if (Utility.IsNullTable(self.currKeyCodes)) then
        return false
    end
    local keyCount = Utility.GetTableCount(self.currKeyCodes)

    for i = 1, keyCount do
        local keyCode = self.currKeyCodes[i]
        if (not Utility.IsNullTable(keyCode)) then
            local inputType
            if (i == keyCount) then
                inputType = LuaInputTypeEnum.Down
            else
                inputType = LuaInputTypeEnum.On
            end
            local isDone = keyCode:IsInput(inputType)
            if (not isDone) then
                return false
            end
        end
    end

    return true
end

---自由配置按键（每个配置的按键是按下还是抬起，还是一直按着，随便配，条件全部满足时响应）
---@return boolean
function LuaShortcutInfo:FreedomShortcutInput()

    if (Utility.IsNullTable(self.currKeyCodes)) then
        return false
    end
    local keyCount = Utility.GetTableCount(self.currKeyCodes)

    for i = 1, keyCount do
        local keyCode = self.currKeyCodes[i]
        if (not Utility.IsNullTable(keyCode)) then

            local isDone
            if (keyCode.InputTypeEnum == LuaInputTypeEnum.None) then
                local inputType
                if (i == keyCount) then
                    inputType = LuaInputTypeEnum.Down
                else
                    inputType = LuaInputTypeEnum.On
                end
                isDone = keyCode:IsInput(inputType)
            else
                isDone = keyCode:IsInputWithoutType()
            end

            if (not isDone) then
                return false
            end
        end
    end

    return true
end

function LuaShortcutInfo:Reset()
    self. lastTimeKeyCodes = self.currKeyCodes
    self. currKeyCodes = self. defaultKeyCodes
end
---恢复到上次保存到快捷键
function LuaShortcutInfo:Withdraw()
    --todo:可扩展将历史快捷存储成队列，然后可以undo,redo
    if (Utility.IsNullTable(self. lastTimeKeyCodes)) then
        self. lastTimeKeyCodes = self. defaultKeyCodes
    end
    if (not Utility.IsNullTable(self.lastTimeKeyCodes)) then
        self. currKeyCodes = self. lastTimeKeyCodes
    end
end
---判断快捷键是否相图
---@param shortCutKeyInfo LuaShortcutKeyInfo
function LuaShortcutInfo:IsSameKeyByInfo(shortCutKeyInfo)
    if (Utility.IsNullTable(shortCutKeyInfo)) then
        return false
    end
    return self:IsSameKeyByKeyCodes(shortCutKeyInfo.currKeyCodes)
end
---@param keys LuaShortcutKeyItem
function LuaShortcutInfo:IsSameKeyByKeyCodes(keys)
    if (Utility.IsNullTable(keys)) then
        return false
    end

    for i = 1, #keys do
        local selfKeyCodes = self.currKeyCodes[i]
        if (Utility.IsNullTable(selfKeyCodes) or Utility.IsNullTable(keys[i])) then
            return false;
        end

        if (not (selfKeyCodes:IsSameKeyByItem(keys[i]))) then
            return false
        end
    end
    return true
end
---快捷键是否有效
function LuaShortcutInfo:IsValid()
    return not Utility.IsNullTable(self.currKeyCodes)
end

function LuaShortcutInfo:GetCurrKeyCodes()
    if (self.currKeyCodes == nil and self.defaultKeyCodes) then
        self.currKeyCodes = self.defaultKeyCodes
    end
    return self.currKeyCodes
end
return LuaShortcutInfo
